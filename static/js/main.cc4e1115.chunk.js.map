{"version":3,"sources":["components/section/Section.js","components/container/Container.js","components/title/Title.js","redux/contacts/state/contactsState.js","helpers/dataGenerator.js","redux/contacts/items/contactsItemsSlice.js","redux/contacts/selectors/contactsSelectors.js","components/button/Button.js","components/form/Form.js","helpers/constants.js","redux/contacts/filter/contactsFilterSlice.js","components/filter/Filter.js","components/contacts/Contacts.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["Section","children","className","SectionWrapper","styled","section","Container","ContainerWrapper","div","Title","title","TitleH2","defaultProps","h2","initialState","contacts","items","data","map","id","nanoid","number","Math","floor","random","dataGenerator","contactsData","filter","contactsItemsSlice","createSlice","name","reducers","addContact","reducer","state","payload","prepare","deleteContact","contact","actions","getItems","getFilter","filteredContacts","lowerCaseFilter","toLowerCase","person","includes","getFiltredContacts","Button","content","type","handleClick","disabled","ButtonWrapper","onClick","defaultPtops","button","Form","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleInputChange","event","currentTarget","value","onReset","MainForm","autoComplete","onSubmit","preventDefault","isContactValid","contactName","contactNumber","some","alert","validateContact","FormLabel","FormInput","placeholder","onChange","pattern","required","minLength","maxLength","form","label","input","contactsFilterSlice","addFilter","_","Filter","Label","Span","Input","p","span","Contacts","ListItem","li","App","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","createLogger","predicate","process","colors","action","prevState","nextState","error","rootReducer","persistReducer","contactsReducer","store","configureStore","devTools","getDefaultMiddleware","concat","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cc4e1115.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Section({ children, className }) {\n  return <SectionWrapper className={className}>{children}</SectionWrapper>;\n}\nSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const SectionWrapper = styled.section`\n  padding: 0 20px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Container({ children, className }) {\n  return <ContainerWrapper className={className}>{children}</ContainerWrapper>;\n}\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const ContainerWrapper = styled.div`\n  padding: 0 10px;\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Title({ title, className }) {\n  return <TitleH2 className={className}>{title}</TitleH2>;\n}\nTitle.defaultProps = {\n  title: 'Section title',\n};\nTitle.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\nexport const TitleH2 = styled.h2`\n  color: var(--yellow);\n  font-size: 32px;\n  font-family: var(--big);\n  text-align: center;\n`;\n","import contactsData from '../../../data/contacts.json';\nimport dataGenerator from '../../../helpers/dataGenerator';\n\nconst contacts = dataGenerator(contactsData);\n\nconst initialState = {\n  contacts: {\n    items: contacts,\n    filter: '',\n  },\n};\n\nexport default initialState;\n","import { nanoid } from 'nanoid';\r\nconst DataGenerator = data => {\r\n  return data.map(contacts => {\r\n    contacts.id = nanoid();\r\n    contacts.number =\r\n      Math.floor(Math.random() * (999 - 100) + 100) +\r\n      '-' +\r\n      Math.floor(Math.random() * (99 - 10) + 10) +\r\n      '-' +\r\n      Math.floor(Math.random() * (99 - 10) + 10);\r\n    return contacts;\r\n  });\r\n};\r\nexport default DataGenerator;\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialState from '../state/contactsState';\nimport { nanoid } from 'nanoid';\n\nexport const contactsItemsSlice = createSlice({\n  name: 'items',\n  initialState: initialState.contacts.items,\n  reducers: {\n    addContact: {\n      reducer: (state, { payload }) => [payload, ...state],\n      prepare: (name, number) => ({\n        payload: { id: nanoid(), name, number },\n      }),\n    },\n    deleteContact: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n});\n\nexport const items = contactsItemsSlice.reducer;\nexport const { addContact, deleteContact } = contactsItemsSlice.actions;\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n\n  const getFiltredContacts = contacts => {\n    const lowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n  return getFiltredContacts(contacts);\n};\n","import styled from 'styled-components';\n\nexport default function Button({ content, type, handleClick, disabled }) {\n  return (\n    <ButtonWrapper type={type} onClick={handleClick} disabled={disabled}>\n      {content}\n    </ButtonWrapper>\n  );\n}\nButton.defaultPtops = {\n  type: 'button',\n  disabled: true,\n};\nconst ButtonWrapper = styled.button`\n  border: 1px solid rgb(255, 252, 252);\n  border-radius: 10px;\n  box-shadow: 0.7px 0.7px 0.75px rgb(173, 172, 172);\n  background-color: rgb(245, 250, 245);\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 250ms ease-in;\n  font-family: var(--font);\n  :hover {\n    cursor: pointer;\n    color: var(--white);\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/items/contactsItemsSlice';\nimport { getItems } from '../../redux/contacts/selectors/contactsSelectors';\nimport styled from 'styled-components';\nimport Section from '../section';\nimport Container from '../container';\nimport Title from '../title';\nimport Button from '../button';\nimport { NAME, NUMBER } from '../../helpers/constants';\n\nexport default function Form() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const validateContact = (contactName, contactNumber, contacts) => {\n    if (contacts.some(({ name }) => name === contactName)) {\n      alert(`\"${contactName}\" is already in contacts!`);\n      return false;\n    } else if (contacts.some(({ number }) => number === contactNumber)) {\n      alert(`\"${contactNumber}\" is already in contacts!`);\n      return false;\n    } else return true;\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === NAME) setName(value);\n    if (name === NUMBER) setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const isContactValid = validateContact(name, number, contacts);\n    if (isContactValid) {\n      onSubmit(name, number);\n      onReset();\n    }\n  };\n\n  const onReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Title title=\"Phonebook\" />\n        <MainForm autoComplete=\"off\" onSubmit={handleFormSubmit}>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter fullname\"\n              onChange={handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n          <FormLabel>\n            Number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={handleInputChange}\n              minLength=\"7\"\n              maxLength=\"17\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n          <Button\n            content=\"Add contact\"\n            type=\"submit\"\n            disabled={name === '' || number === ''}\n          />\n        </MainForm>\n      </Container>\n    </Section>\n  );\n}\nexport const MainForm = styled.form`\n  padding: 5px;\n  margin: 0 auto;\n  width: 250px;\n  font-family: var(--font);\n  button {\n    margin: 0;\n    width: 100%;\n    padding: 5px 20px;\n    :hover {\n      background-color: var(--green);\n      border: 1px solid var(--blue);\n    }\n    :disabled:hover {\n      cursor: not-allowed;\n      color: var(--red);\n      background-color: var(--white);\n      border: 1px solid var(--red);\n    }\n  }\n`;\nexport const FormLabel = styled.label`\n  margin: 0 0 2px 0;\n  font-family: var(--font);\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const FormInput = styled.input`\n  padding: 5px 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  border-radius: 10px;\n`;\n","export const NAME = 'name';\nexport const NUMBER = 'number';\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialState from '../state/contactsState';\n\nexport const contactsFilterSlice = createSlice({\n  name: 'filter',\n  initialState: initialState.contacts.filter,\n  reducers: {\n    addFilter: (_, { payload }) => payload,\n  },\n});\n\nexport const filter = contactsFilterSlice.reducer;\nexport const { addFilter } = contactsFilterSlice.actions;\n","import styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addFilter } from '../../redux/contacts/filter/contactsFilterSlice';\nimport { getFilter } from '../../redux/contacts/selectors/contactsSelectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = event => dispatch(addFilter(event.currentTarget.value));\n  return (\n    <Label>\n      <Title>\n        Find contacts by <Span>name</Span>\n      </Title>\n      <Input type=\"search\" name=\"search\" value={value} onChange={onChange} />\n    </Label>\n  );\n}\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.p`\n  margin: 5px 0;\n  color: var(--white);\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n`;\nexport const Span = styled.span`\n  color: var(--yellow);\n`;\nexport const Input = styled.input`\n  color: var(--blue);\n`;\n","import styled from 'styled-components';\nimport Button from '../button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/items/contactsItemsSlice';\nimport { filteredContacts } from '../../redux/contacts/selectors/contactsSelectors';\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n  return (\n    <ul>\n      {contacts.map(person => (\n        <ListItem key={person.id}>\n          {person.name} : {person.number}\n          <Button\n            content=\"Delete\"\n            handleClick={() => dispatch(deleteContact(person.id))}\n          />\n        </ListItem>\n      ))}\n    </ul>\n  );\n}\nexport const ListItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  list-style: circle;\n  align-items: baseline;\n  width: 350px;\n  padding: 5px;\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n  ::before {\n    content: '';\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: var(--yellow);\n    border-radius: 50%;\n  }\n  button {\n    margin: 5px 0 5px 10px;\n    padding: 3px 10px 3px 10px;\n    :hover {\n      background-color: var(--blue);\n      border: 1px solid var(--dark);\n    }\n  }\n`;\n","import Section from './components/section';\nimport Container from './components/container';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Filter from './components/filter';\nimport Contacts from './components/contacts';\n\nexport default function App() {\n  return (\n    <>\n      <Form />\n      <Section>\n        <Container>\n          <Title title=\"Contacts\" />\n          <Filter />\n          <Contacts />\n        </Container>\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { items } from './items/contactsItemsSlice';\nimport { filter } from './filter/contactsFilterSlice';\n\nexport default combineReducers({ items, filter });\n","import {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contactsReducer';\nimport { createLogger } from 'redux-logger';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = {\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n};\n\nconst logger = createLogger({\n  predicate: () => process.env.NODE_ENV !== 'production',\n  colors: {\n    title: action => 'orange',\n    prevState: prevState => 'cyan',\n    action: action => 'violet',\n    nextState: nextState => 'lawngreen',\n    error: (error, prevState) => 'red',\n  },\n});\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === !!'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware(middleware).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}