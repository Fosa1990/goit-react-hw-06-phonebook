{"version":3,"sources":["components/section/Section.js","components/container/Container.js","components/title/Title.js","components/button/Button.js","components/form/Form.js","helpers/constants.js","components/filter/Filter.js","components/contacts/Contacts.js","App.js","helpers/dataGenerator.js","hooks/useLocalStorage.js","index.js"],"names":["Section","children","className","SectionWrapper","styled","section","Container","ContainerWrapper","div","Title","title","TitleH2","defaultProps","h2","Button","content","type","handleClick","disabled","ButtonWrapper","onClick","defaultPtops","button","Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","handleReset","MainForm","autoComplete","preventDefault","FormLabel","FormInput","placeholder","onChange","pattern","required","minLength","maxLength","form","label","input","Filter","Label","Span","Input","p","span","Contacts","contacts","onDeleteButtonClick","map","person","ListItem","id","li","defaultContacts","data","nanoid","Math","floor","random","dataGenerator","APP","key","defaultValue","serialize","JSON","stringify","deserialize","parse","window","localStorage","getItem","state","setState","useEffect","setItem","length","useLocalStorage","setContacts","filter","setFilter","validateContact","some","alert","filteredContacts","useMemo","lowerCaseFilter","toLowerCase","includes","getFiltredContacts","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2c59b8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Section({ children, className }) {\n  return <SectionWrapper className={className}>{children}</SectionWrapper>;\n}\nSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const SectionWrapper = styled.section`\n  padding: 0 20px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Container({ children, className }) {\n  return <ContainerWrapper className={className}>{children}</ContainerWrapper>;\n}\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const ContainerWrapper = styled.div`\n  padding: 0 10px;\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Title({ title, className }) {\n  return <TitleH2 className={className}>{title}</TitleH2>;\n}\nTitle.defaultProps = {\n  title: 'Section title',\n};\nTitle.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\nexport const TitleH2 = styled.h2`\n  color: var(--yellow);\n  font-size: 32px;\n  font-family: var(--big);\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport default function Button({ content, type, handleClick, disabled }) {\n  return (\n    <ButtonWrapper type={type} onClick={handleClick} disabled={disabled}>\n      {content}\n    </ButtonWrapper>\n  );\n}\nButton.defaultPtops = {\n  type: 'button',\n  disabled: true,\n};\nconst ButtonWrapper = styled.button`\n  border: 1px solid rgb(255, 252, 252);\n  border-radius: 10px;\n  box-shadow: 0.7px 0.7px 0.75px rgb(173, 172, 172);\n  background-color: rgb(245, 250, 245);\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 250ms ease-in;\n  font-family: var(--font);\n  :hover {\n    cursor: pointer;\n    color: var(--white);\n  }\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport Section from '../section';\nimport Container from '../container';\nimport Title from '../title';\nimport { NAME, NUMBER } from '../../helpers/constants';\nimport Button from '../button';\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === NAME) setName(value);\n    if (name === NUMBER) setNumber(value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number });\n    handleReset();\n  };\n  const handleReset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Section>\n      <Container>\n        <Title title=\"Phonebook\" />\n        <MainForm autoComplete=\"off\" onSubmit={handleFormSubmit}>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter fullname\"\n              onChange={handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n          <FormLabel>\n            Number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={handleInputChange}\n              minLength=\"7\"\n              maxLength=\"9\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n          <Button\n            content=\"Add contact\"\n            type=\"submit\"\n            disabled={name === '' || number === ''}\n          />\n        </MainForm>\n      </Container>\n    </Section>\n  );\n}\nexport const MainForm = styled.form`\n  padding: 5px;\n  margin: 0 auto;\n  width: 250px;\n  font-family: var(--font);\n  button {\n    margin: 0;\n    width: 100%;\n    padding: 5px 20px;\n    :hover {\n      background-color: var(--green);\n      border: 1px solid var(--blue);\n    }\n    :disabled:hover {\n      cursor: not-allowed;\n      color: var(--red);\n      background-color: var(--white);\n      border: 1px solid var(--red);\n    }\n  }\n`;\nexport const FormLabel = styled.label`\n  margin: 0 0 2px 0;\n  font-family: var(--font);\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const FormInput = styled.input`\n  padding: 5px 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  border-radius: 10px;\n`;\n","export const NAME = 'name';\nexport const NUMBER = 'number';\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nexport default function Filter({ value, onChange }) {\n  return (\n    <>\n      <Label>\n        <Title>\n          Find contacts by <Span>name</Span>\n        </Title>\n        <Input type=\"search\" name=\"search\" value={value} onChange={onChange} />\n      </Label>\n    </>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.p`\n  margin: 5px 0;\n  color: var(--white);\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n`;\nexport const Span = styled.span`\n  color: var(--yellow);\n`;\nexport const Input = styled.input`\n  color: var(--blue);\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nexport default function Contacts({ contacts, onDeleteButtonClick }) {\n  return (\n    <ul>\n      {contacts.map(person => (\n        <ListItem key={person.id}>\n          {person.name} : {person.number}\n          <Button\n            content=\"Delete\"\n            handleClick={() => onDeleteButtonClick(person.id)}\n          />\n        </ListItem>\n      ))}\n    </ul>\n  );\n}\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteButtonClick: PropTypes.func.isRequired,\n};\nexport const ListItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  list-style: circle;\n  align-items: baseline;\n  width: 350px;\n  padding: 5px;\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n  ::before {\n    content: '';\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: var(--yellow);\n    border-radius: 50%;\n  }\n  button {\n    margin: 5px 0 5px 10px;\n    padding: 3px 10px 3px 10px;\n    :hover {\n      background-color: var(--blue);\n      border: 1px solid var(--dark);\n    }\n  }\n`;\n","import { useState, useMemo } from 'react';\nimport Section from './components/section';\nimport Container from './components/container';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Filter from './components/filter';\nimport Contacts from './components/contacts';\nimport dataGenerator from './helpers/dataGenerator';\nimport contactsData from './data/contacts.json';\nimport { nanoid } from 'nanoid';\nimport useLocalStorage from './hooks/useLocalStorage';\nconst defaultContacts = dataGenerator(contactsData);\nexport default function APP() {\n  const [contacts, setContacts] = useLocalStorage('contacts', defaultContacts);\n  const [filter, setFilter] = useState('');\n  const formSubmitHandler = data => {\n    const isContactValid = validateContact(data, contacts);\n    if (isContactValid) {\n      data.id = nanoid();\n      setContacts(contacts => [data, ...contacts]);\n    }\n  };\n  const validateContact = (data, contacts) => {\n    if (contacts.some(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts!`);\n      return false;\n    } else if (contacts.some(({ number }) => number === data.number)) {\n      alert(`${data.number} is already in contacts!`);\n      return false;\n    } else return true;\n  };\n  const deleteContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n  const handleSearch = event => {\n    setFilter(event.currentTarget.value);\n  };\n  const filteredContacts = useMemo(() => {\n    const getFiltredContacts = contacts => {\n      const lowerCaseFilter = filter.toLowerCase();\n      return contacts.filter(person =>\n        person.name.toLowerCase().includes(lowerCaseFilter),\n      );\n    };\n    return getFiltredContacts(contacts);\n  }, [contacts, filter]);\n  return (\n    <>\n      <Form onSubmit={formSubmitHandler} />\n      <Section>\n        <Container>\n          <Title title=\"Contacts\" />\n          <Filter value={filter} onChange={handleSearch} />\n          <Contacts\n            contacts={filteredContacts}\n            onDeleteButtonClick={deleteContact}\n          />\n        </Container>\n      </Section>\n    </>\n  );\n}\n","import { nanoid } from 'nanoid';\nconst DataGenerator = data => {\n  return data.map(contacts => {\n    contacts.id = nanoid();\n    contacts.number =\n      Math.floor(Math.random() * (999 - 100) + 100) +\n      '-' +\n      Math.floor(Math.random() * (99 - 10) + 10) +\n      '-' +\n      Math.floor(Math.random() * (99 - 10) + 10);\n    return contacts;\n  });\n};\nexport default DataGenerator;\n","import { useState, useEffect } from 'react';\nexport default function useLocalStorage(key, defaultValue) {\n  const serialize = JSON.stringify;\n  const deserialize = JSON.parse;\n  const [state, setState] = useState(() => {\n    return deserialize(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, serialize(state));\n    const localStorageArrayLength = deserialize(\n      window.localStorage.getItem(key).length === 0,\n    );\n    if (localStorageArrayLength) setState(defaultValue);\n  }, [key, defaultValue, serialize, deserialize, state]);\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}